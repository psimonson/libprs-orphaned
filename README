========================================
           .:[PRS Library]:.
========================================
To build this library run the commands
below...
========================================
  autoreconf -vfi
  ./configure --prefix=/usr/local
  make
  sudo make install
========================================
That should configure for your build
environment, then build and finally
install to your system.
========================================
             CFile Header
========================================
init_file()  - initialize the structure.
open_file()  - opens a file with the
               structure.
close_file() - cleanup and close file.
========================================
get_error_file()  - get error string.
get_errori_file() - get error number.
========================================
read_file()   - read from file using
                buffer.
readf_file()  - read formatted from file
                like fscanf.
write_file()  - write to file using
                buffer.
writef_file() - write formatted to file
                like fprintf.
========================================
getc_file() - get next byte from file.
putc_file() - put a byte to the file.
========================================
             CLogger Header
========================================
init_logger() - initialize logger.
open_log()    - create a log file.
close_log()   - close a log file.
========================================
read_log()    - read back entire log.
write_log()   - append to end of log.
========================================
get_status()   - get current status.
get_log_name() - get name of log file.
print_status() - print if open/closed.
========================================
             UStack Header
========================================
init_stack()  - initialize a stack.
free_stack()  - cleanup memory of stack.
========================================
push_stack()  - push element on top.
pop_stack()   - pop element off top.
peek_stack()  - check element on top.
========================================
reset_top()   - reset top back to cur-
                rent element on top of
                stack.
========================================
NOTE: If you need to know how to use
ustack, then look at the two test cases.
test4.c and test5.c inside the test
folder. test4 shows usage with a single
data type. test5 shows usage with a
structure.
========================================
           .:[END OF FILE]:.
========================================
